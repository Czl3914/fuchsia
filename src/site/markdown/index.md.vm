<div style="width: 940px;">
<header class="jumbotron subhead">
    <div class="row" id="banner">
        <div class="span12">
            <div class="pull-left">
                <a href="index.html" id="bannerLeft"><h1><span class="color-highlight">OW2 Chameleon</span> ~ Fuchsia</h1></a>
                <p class="lead">Framework to communicate with the wild outside world.</p>
            </div>
            <div class="pull-right">
            </div>
        </div>
    </div>
</header>
</div>

<div class="intro">
    <div class="span12">
    <div class="row">

        <div class="span6">
            The <code>Fuchsia Framework</code> is a Framework which provides facilities to your applications
            communications with the wild outside world.
            It's come by default with the ability to communicate with the following protocols :
            <ul>
                <li>Fake</li>
                <li>JAX-WS</li>
                <li>JSON-RPC</li>
                <li>UPnP(TM)</li>
                <li>Bluetooth (coming soon)</li>
                <li>JAX-RS (in the future)</li>
            </ul>
        </div>

        <div class="span6">
            <a href="http://chameleon.ow2.org">
                <img src="img/chameleon-project.png" style="width: 60%;">
            </a>
        </div>

    </div>
    </div>
</div>
<div class="clearfix"></div>

<div class="features">
    <div class="row">
        <div class="span12">

            <!-- Features hero -->
            <div class="hero">
                <!-- Title. Don't forget the <span> tag -->
                <h3><span>Concepts</span></h3>
                <!-- para -->
                <p>The main idea behind Fuchsia is to have a clear separation of concern between the distributed part of
                    your applications and the local ones. The Fuchsia framework is based on OSGi and iPOJO. Once you
                    have populated your OSGi framework with the fuchsia bundles and your applications ones you are able
                    to dynamically create and publish declarations to import externals services into the OSGi framework,
                    or to export your local OSGi services has external services.
                </p>
            </div>

            <!-- Features -->

            <div class="ifeature">

                <div class="ifeat">
                    <div class="row">
                        <div class="span6">
                            <h4>Core</h4>
                            <p>The <code>Fuchsia Core</code> is the main bundle of Fuchsia. It contains the core
                            components of the framework.
                            Fuchsia allows you to simply build your own importers and discoveries components </p>
                            <div class="button"><a href="core.html">Read more</a></div>
                        </div>
                        <div class="span6">
                            <h4>JSON-RPC</h4>
                            <p>The <code>Fuchsia JSON-RPC</code> allow you to create proxy(ies)
                             of a JSON-RPC server into your OSGi platform.</p>
                            <p>In a near future it will provides also the possibility to export your local services
                            as JSON-RPC services.</p>
                            <div class="button"><a href="json-rpc.html">Read more</a></div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>

                <div class="ifeat">
                    <div class="row">
                        <div class="span6">
                            <h4>Fake</h4>
                            <p>The <code>Fuchsia Fake</code> allow you to easily create fake devices and services for your
                            simulations platforms.</p>
                            <p>The Fuchsia Fake contains a discovery component which monitor a directory
                            and publish an import declaration for each device file into it. The device file must use a
                            special syntax.
                            <br/>In the future it will allow you to add your own syntax of device file. And more than
                            that to provides your own monitor of fake description (based on what you want and no more on
                            file monitoring).
                            </p>
                            <p>The second component is a importer which create a proxy(ies) of fake devices.</p>
                            <div class="button"><a href="fake.html">Read more</a></div>
                        </div>
                        <div class="span6">
                            <h4>Jax-WS</h4>
                            <p>The <code>Fuchsia JAX-WS</code> allow you to create proxy(ies) of a WebService
                            into your platform.</p>
                            <p>In a near future it will provides also the possibility to export your local services
                            as JAX-WS services.</p>
                            <div class="button"><a href="jax-ws.html">Read more</a></div>
                        </div>
                        <div class="Read more"></div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<div class="license">
    <div class="row">
        <div class="span12">

            <!-- Features hero -->
            <div class="hero">
                <!-- Title. Don't forget the <span> tag -->
                <h3><span>License</span></h3>
                <!-- para -->
                <p>The Fuchsia Framework is part of the OW2 Chameleon project and is licensed under the Apache Software
                    License 2.0.</p>
            </div>
        </div>
    </div>
</div>

